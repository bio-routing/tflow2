syntax = "proto3";

package tflow2.netflow;
option go_package = "github.com/bio-routing/tflow2/netflow";


import "github.com/bio-routing/bio-rd/net/api/net.proto";

service annotator {
  rpc Annotate (Flow) returns (Flow) {}
}

message Flow {
  // Shared flow attributes
  FlowShared FlowShared = 1;

  // Shared device attributes
  RtrShared RtrShared = 2;

  // Unix timestamp
  int64 timestamp = 3;
  
  // Number of packets
  uint32 packets = 4;

  // Size of flow
  uint64 size = 5;
}

message RtrShared {
  // Router flow was received from
  bio.net.IP router = 1;

  // Samplerate
  uint64 samplerate = 2;

  // Next Hop
  bio.net.IP next_hop = 3;

  // Next Hop ASN
  uint32 next_hop_as = 4;

  // SNMP interface id flow was received on
  uint32 int_in = 5;

  // SNMP interface if flow was transmitted on
  uint32 int_out = 6;
}

message FlowShared {
  // SRC IP
  bio.net.IP src_addr = 1;

  // DST IP
  bio.net.IP dst_addr = 2;

  // Protocol
  uint32 protocol = 4;

  // SRC Port
  uint32 src_port = 5;

  // DST Port
  uint32 dst_port = 6;

  // SRC AS
  uint32 src_as = 7;

  // DST AS
  uint32 dst_as = 8;

  // SRC PFX
  bio.net.Prefix src_pfx = 9;

  // DST PFX
  bio.net.Prefix dst_pfx = 10;
}

// Intf groups an interfaces ID and name
message Intf {
    // ID is an interface ID
    uint32 id = 1;

    // name is an interfaces name
    string name = 2;
}

// Flows defines a groups of flows
message Flows {
    // Group of flows
    repeated Flow flows = 1;
    
    // Mapping of interface names to IDs
    repeated Intf interface_mapping = 2;
}